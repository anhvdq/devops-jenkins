pipeline {
    agent any

    environment {
        PG_DATABASE_HOST = 'localhost'
        PG_DATABASE_PORT = '5432'
        PG_DATABASE_DB = 'apidb'
        PG_DATABASE_USERNAME = 'postgres'
        PG_DATABASE_PASSWORD = 'postgres'
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        timeout(time: 30, unit: 'MINUTES')
        timestamps()
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'staging', credentialsId: 'github-integrations', url: 'https://github.com/anhvdq/devops-jenkins'
            }
        }

        stage('Build') {
            steps {
                echo "Building project..."
                sh '''
                    cargo build
                '''
            }
        }

        stage('Tests & Checks') {
            parallel {
                stage('Unit Tests') {
                    steps {
                        sh '''
                            echo "...Running unit tests..."
                            cargo test --lib --bins --verbose -- --nocapture
                        '''
                    }
                }

                stage('Integration Tests') {
                    steps {
                        sh '''
                            echo "...Running integration tests..."
                            cargo test --test '*' --verbose -- --nocapture
                        '''
                    }
                }

                stage('Clippy Lint') {
                    steps {
                        sh '''
                            echo "...Running Clippy..."
                            cargo clippy --all-targets --all-features -- -D warnings
                        '''
                    }
                }

                stage('Security Audit') {
                    steps {
                        sh '''
                            echo "...Running security audit..."
                            cargo audit
                        '''
                    }
                }

                stage('License Check') {
                    steps {
                        sh '''
                            echo "...Checking licenses..."
                            cargo license || echo "License check completed"
                        '''
                    }
                }
            }
        }
    }

    post {
        success {
            echo "All checks passed!"
        }
        failure {
            echo "Pipeline failed"
        }
    }
}
